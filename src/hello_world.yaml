swagger: "2.0"


info:
  description: "The Hello World! chain code shows the first steps in developing a chaincode that 
    can read/write strings onto the blockchain and can expose these functions as REST API. THIS SAMPLE 
    CODE MAY BE USED SOLELY AS PART OF THE TEST AND EVALUATION OF THE SAP CLOUD PLATFORM BLOCKCHAIN 
    SERVICE (THE “SERVICE”) AND IN ACCORDANCE WITH THE AGREEMENT FOR THE SERVICE. THIS SAMPLE CODE 
    PROVIDED “AS IS”, WITHOUT ANY WARRANTY, ESCROW, TRAINING, MAINTENANCE, OR SERVICE OBLIGATIONS 
    WHATSOEVER ON THE PART OF SAP."
  version: "1.0"
  title: "Hello World!"


consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json


parameters:

  id:
    name: id
    in: path
    description: ID of the message
    required: true
    type: string
    maxLength: 64

  text:
    name: text
    in: formData
    description: The text of the message
    required: true
    type: string
    maxLength: 255


paths:

  /{id}:

    head:
      operationId: exist
      summary: Validate text's existance by ID
      parameters:
      - $ref: '#/parameters/id'
      responses:
        204:
          description: Message Exists
        400:
          description: Parameter Mismatch
        404:
          description: Not Found


    get:
      operationId: read
      summary: Read text by ID
      parameters:
      - $ref: '#/parameters/id'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              text: 
                type: string
        400:
          description: Parameter Mismatch
        404:
          description: Not Found


    post:
      operationId: create
      summary: Creates a text by ID 
      parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/text'
      responses:
        201:
          description: Text Created
        400:
          description: Parameter Mismatch
        409:
          description: Text Already Exists


    put:
      operationId: update
      summary: Updates a text by ID 
      parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/text'
      responses:
        204:
          description: Text Updated
        400:
          description: Parameter Mismatch
        404:
          description: Not Found


    delete:
      operationId: delete
      summary: Delete text by ID
      parameters:
      - $ref: '#/parameters/id'
      responses:
        204:
          description: Text Deleted
        400:
          description: Parameter Mismatch
        404:
          description: Not Found


  /{id}/history:

    get:
      operationId: history
      summary: Return history by ID
      parameters:
      - $ref: '#/parameters/id'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              values:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                    text:
                      type: string
        400:
          description: Parameter Mismatch
        404:
          description: Not Found


  /search/{wildcard}:

    get:
      operationId: search
      summary: Find text by wildcard search in the text strings
      description: Search for all matching IDs, given a (regex) value expression and return both the IDs and text. For example '^H.llo' will match any string starting with 'Hello' or 'Hallo'.
      parameters:
      - name: wildcard
        in: path
        description: Wildcard regular expression to match against texts
        required: true
        type: string
        maxLength: 64
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              values:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    text:
                      type: string
        400:
          description: Parameter Mismatch